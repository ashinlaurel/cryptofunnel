{"version":3,"sources":["components/Typography/PageTitle.js","images/user.png","pages/Refferals/RefferalRequests.js"],"names":["PageTitle","children","className","RefferalRequests","useState","page","setPage","data","setData","setTempCode","refresh","setRefresh","searchquery","setSearchQuery","messageModal","setMessageModal","modalMessage","setModalMessage","fromDate","setFromDate","toDate","setToDate","selectedId","setSelectedId","selectedName","setSelectedName","isRefferalModalOpen","setIsRefferalModalOpen","code","setCode","discount","setDiscount","totalResults","setTotalResults","setIsModalOpen","AcceptInfluencer","id","a","payload","axios","post","API","UserProfile","getId","response","console","log","useEffect","pages","limit","filters","plan","InfulencerRequest","role","url","method","out","total","handleCreateRefferal","name","creatorName","creatorId","refCode","isOpen","onClose","onClick","class","value","onChange","e","target","placeholder","layout","block","size","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","type","map","user","i","src","UserPng","alt","job","email","Date","createdAt","toLocaleDateString","_id","resultsPerPage","label","p"],"mappings":"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","file":"static/js/10.134e1e77.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport UserProfile from \"../../helper/auth/UserProfile\";\r\nimport UserPng from \"../../images/user.png\";\r\n\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Pagination,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"@windmill/react-ui\";\r\n\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\n\r\nfunction RefferalRequests() {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [tempcode, setTempCode] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(true);\r\n  const [searchquery, setSearchQuery] = useState(\"\");\r\n  const [messageModal, setMessageModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  //referal modal\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [selectedName, setSelectedName] = useState(\"\");\r\n  const [isRefferalModalOpen, setIsRefferalModalOpen] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [discount, setDiscount] = useState(0);\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const [totalResults, setTotalResults] = useState(20);\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  const AcceptInfluencer = async (id) => {\r\n    try {\r\n      const payload = { id: id };\r\n      const response = await axios.post(\r\n        `${API}/user/${UserProfile.getId()}/acceptInfluencer`,\r\n        payload\r\n      );\r\n      console.log(response.data);\r\n\r\n      setModalMessage(\"Influencer Status Accepted\");\r\n      setMessageModal(true);\r\n      setRefresh(!refresh);\r\n    } catch (err) {\r\n      setModalMessage(\"Sorry, an error occured\");\r\n      setMessageModal(true);\r\n    }\r\n  };\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n\r\n  useEffect(() => {\r\n    // Using an IIFE\r\n    (async function thegetter() {\r\n      console.log(\"getter called\");\r\n      let payload = {\r\n        pages: {\r\n          page: page,\r\n          limit: resultsPerPage,\r\n        },\r\n        filters: {\r\n          searchquery: searchquery,\r\n          plan: \"\",\r\n          InfulencerRequest: true,\r\n          role: \"\",\r\n          fromDate: fromDate,\r\n          toDate: toDate,\r\n        },\r\n      };\r\n\r\n      try {\r\n        let response = await axios({\r\n          url: `${API}/user/${UserProfile.getId()}/getAllUsers`,\r\n          method: \"POST\",\r\n          data: payload,\r\n        });\r\n        console.log(response.data.out);\r\n        setTotalResults(response.data.total);\r\n\r\n        setData(response.data.out);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    })();\r\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [page, searchquery, refresh, fromDate, toDate]);\r\n\r\n  const messageModalComponent = () => {\r\n    return (\r\n      <>\r\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\r\n          <ModalHeader>{modalMessage}</ModalHeader>\r\n          <ModalBody></ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              className=\"w-full sm:w-auto\"\r\n              onClick={() => setMessageModal(false)}\r\n            >\r\n              Okay!\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleCreateRefferal = async () => {\r\n    try {\r\n      let id = selectedId;\r\n      let name = selectedName;\r\n      console.log(id);\r\n      const payload = {\r\n        creatorName: name,\r\n        creatorId: id,\r\n        refCode: code,\r\n        discount: discount,\r\n      };\r\n      const response = await axios.post(\r\n        `${API}/refferal/${UserProfile.getId()}/createnew`,\r\n        payload\r\n      );\r\n      console.log(response.data);\r\n      setTempCode(\"\");\r\n      setDiscount(\"\");\r\n      setSelectedName(\"\");\r\n      setSelectedId(\"\");\r\n      setRefresh(!refresh);\r\n      setIsModalOpen(false);\r\n      setModalMessage(\"Referal Code Added\");\r\n      setMessageModal(true);\r\n    } catch (err) {\r\n      setModalMessage(\"Sorry,Error Occured\");\r\n      setMessageModal(true);\r\n    }\r\n  };\r\n\r\n  const setReferalModal = () => {\r\n    return (\r\n      <Modal\r\n        isOpen={isRefferalModalOpen}\r\n        onClose={() => setIsRefferalModalOpen(false)}\r\n      >\r\n        <ModalHeader>New Refferal Code</ModalHeader>\r\n        <ModalBody>\r\n          You can use the following refferal code to get a discount !!\r\n          <div className=\"flex items-center justify-left my-2\">\r\n            <div class=\" relative ml-2\">\r\n              <label>\r\n                Code\r\n                <input\r\n                  value={code}\r\n                  onChange={(e) => setCode(e.target.value)}\r\n                  placeholder=\"Enter the discount %\"\r\n                  class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div class=\" relative ml-2\">\r\n              <label>\r\n                Discount(%)\r\n                <input\r\n                  value={discount}\r\n                  onChange={(e) => setDiscount(e.target.value)}\r\n                  placeholder=\"Enter the discount %\"\r\n                  class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\r\n           * that if present, would duplicate the buttons in a way similar to this.\r\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\r\n           * to Button\r\n           */}\r\n          <div className=\"hidden sm:block\">\r\n            <Button\r\n              layout=\"outline\"\r\n              onClick={() => setIsRefferalModalOpen(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleCreateRefferal}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button\r\n              block\r\n              size=\"large\"\r\n              layout=\"outline\"\r\n              onClick={() => setIsRefferalModalOpen(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button onClick={handleCreateRefferal} block size=\"large\">\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Influencer Requests</PageTitle>\r\n      {messageModalComponent()}\r\n      {setReferalModal()}\r\n\r\n      {/* <CTA /> */}\r\n\r\n      <div className=\"font-bold text-gray-700 text-xl\">Users</div>\r\n\r\n      <div className=\"mb-4\">\r\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\r\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full xl:space-x-2 \">\r\n          {/* ---------------------------Condition Drop Down-------------------------------------- */}\r\n          <div class=\"relative mx-1 \">\r\n            <select\r\n              class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-1 xl:py-2  xl: px-4  leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\r\n              // value={condition}\r\n              onChange={(e) => {\r\n                // setCondition(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Plan\r\n              </option>\r\n              <option value=\"\">All</option>\r\n              <option value=\"\">No Plan</option>\r\n              <option value=\"Good\">Gold</option>\r\n              <option value=\"Bad\">Silver</option>\r\n              <option value=\"Used\">Bronze</option>\r\n            </select>\r\n\r\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n              <svg\r\n                class=\"fill-current h-4 w-4\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n\r\n          {/* -----------------Search Bar------------------------------------ */}\r\n          <div class=\"block relative xl:ml-64 mt-2 xl:mt-0 ml-1\">\r\n            <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                class=\"h-4 w-4 fill-current text-gray-500\"\r\n              >\r\n                <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\r\n              </svg>\r\n            </span>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setRefresh(!refresh);\r\n              }}\r\n            >\r\n              <input\r\n                value={searchquery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search\"\r\n                class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1 px-8  xl:pl-8 xl:pr-6 xl:py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              />\r\n            </form>\r\n          </div>\r\n\r\n          <label className=\"text-gray-700 -mt-3 mb-2 text-sm\">\r\n            <span>From Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={fromDate}\r\n              onChange={(e) => setFromDate(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"text-gray-700 -mt-3  mb-1 text-sm\">\r\n            <span>To Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={toDate}\r\n              onChange={(e) => setToDate(e.target.value)}\r\n            />\r\n          </label>\r\n\r\n          {/* <div class=\"block relative xl:ml-64\">\r\n            <Button\r\n              layout=\"outline\"\r\n              onClick={() => {\r\n                // setIsDwnldModalOpen(true);\r\n              }}\r\n            >\r\n              Download Database\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              {/* <TableCell>Client</TableCell> */}\r\n              <TableCell>User</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Created At</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Assign Referal</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {data.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar\r\n                      className=\"hidden mr-3 md:block\"\r\n                      src={UserPng}\r\n                      alt=\"User image\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.name}</p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                        {user.job}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                  <span className=\"text-sm \">{user.email}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">\r\n                    {new Date(user.createdAt).toLocaleDateString()}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {user.role == 4 ? (\r\n                    <span className=\"text-sm font-semibold text-primary-800 \">\r\n                      Accepted\r\n                    </span>\r\n                  ) : (\r\n                    <Button\r\n                      className=\"w-full sm:w-auto\"\r\n                      onClick={() => {\r\n                        AcceptInfluencer(user._id);\r\n                      }}\r\n                    >\r\n                      Accept\r\n                    </Button>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    className=\"w-full sm:w-auto\"\r\n                    onClick={() => {\r\n                      setSelectedId(user._id);\r\n                      setSelectedName(user.name);\r\n                      setIsRefferalModalOpen(true);\r\n                    }}\r\n                  >\r\n                    Assign Code\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RefferalRequests;\r\n"],"sourceRoot":""}