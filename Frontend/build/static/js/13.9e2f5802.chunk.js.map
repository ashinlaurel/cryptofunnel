{"version":3,"sources":["components/Typography/PageTitle.js","pages/Refferals/Refferals.js"],"names":["PageTitle","children","className","Refferals","useState","page","setPage","data","setData","tempcode","setTempCode","discount","setDiscount","refresh","setRefresh","fromDate","setFromDate","toDate","setToDate","condition","setCondition","messageModal","setMessageModal","modalmessage","setModalmessage","totalResults","setTotalResults","isModalOpen","setIsModalOpen","closeModal","useEffect","a","console","log","payload","pages","limit","filters","creatorId","axios","url","API","UserProfile","getId","method","response","out","total","getNewCode","id","post","handleCreateRefferal","name","getName","creatorName","refCode","HandleDeleteRefferal","temp","filter","e","_id","isOpen","onClose","class","onSubmit","preventDefault","value","onChange","target","placeholder","layout","onClick","block","size","selected","viewBox","d","type","map","user","i","status","Date","createdAt","toLocaleDateString","resultsPerPage","label","p"],"mappings":"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","file":"static/js/13.9e2f5802.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useState, useEffect } from \"react\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\n\nimport UserProfile from \"../../helper/auth/UserProfile\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Pagination,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n} from \"@windmill/react-ui\";\n\nimport axios from \"axios\";\nimport { API } from \"../../backend\";\n\nfunction Refferals() {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [tempcode, setTempCode] = useState(\"\");\n  const [discount, setDiscount] = useState(\"0\");\n  const [refresh, setRefresh] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [messageModal, setMessageModal] = useState(false);\n  const [modalmessage, setModalmessage] = useState(\"\");\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  const theModal = () => {\n    return (\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <ModalHeader>New Refferal Code</ModalHeader>\n        <ModalBody>\n          You can use the following refferal code to get a discount !!\n          <div className=\"flex items-center justify-left my-2\">\n            <label>\n              Code:\n              <div className=\"bg-gray-700 my-2 flex font-bold py-2 px-32 text-lg  text-white items-center justify-center rounded-lg\">\n                {/* <div>Code:</div> */}\n                <div>{tempcode}</div>\n              </div>\n            </label>\n\n            <div class=\" relative ml-2\">\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                <label>\n                  Discount(%)\n                  <input\n                    value={discount}\n                    onChange={(e) => setDiscount(e.target.value)}\n                    placeholder=\"Enter the discount %\"\n                    class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-600 border-b block pl-2 pr-6 py-2 placeholder-gray-100 w-full bg-cool-gray-900 text-sm placeholder-gray-410 text-gray-100  fne-none\"\n                  />\n                </label>\n              </form>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\n           * that if present, would duplicate the buttons in a way similar to this.\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\n           * to Button\n           */}\n          <div className=\"hidden sm:block\">\n            <Button layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Button onClick={handleCreateRefferal}>Accept</Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button onClick={handleCreateRefferal} block size=\"large\">\n              Accept\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>{modalmessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setMessageModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          creatorId: condition,\n          fromDate: fromDate,\n          toDate: toDate,\n        },\n      };\n\n      try {\n        let response = await axios({\n          url: `${API}/refferal/${UserProfile.getId()}/getbyuser`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, refresh, fromDate, toDate, condition]);\n\n  const getNewCode = async () => {\n    let id = UserProfile.getId();\n    // console.log(id);\n    const payload = { creatorId: id };\n    const response = await axios.post(\n      `${API}/refferal/${UserProfile.getId()}/getNewCode`,\n      payload\n    );\n    console.log(response.data);\n    setTempCode(response.data);\n    setIsModalOpen(true);\n  };\n\n  const handleCreateRefferal = async () => {\n    let id = UserProfile.getId();\n    let name = UserProfile.getName();\n    console.log(id);\n    const payload = {\n      creatorName: name,\n      creatorId: id,\n      refCode: tempcode,\n      discount: discount,\n    };\n    const response = await axios.post(\n      `${API}/refferal/${UserProfile.getId()}/createnew`,\n      payload\n    );\n    console.log(response.data);\n    setTempCode(\"\");\n    setDiscount(\"\");\n    setRefresh(!refresh);\n    setIsModalOpen(false);\n  };\n\n  const HandleDeleteRefferal = async (id) => {\n    try {\n      const response = await axios.post(\n        `${API}/refferal/${UserProfile.getId()}/deleteRefferal`,\n        { id: id }\n      );\n      console.log(response);\n      let temp = data.filter((e) => e._id != id);\n      setData(temp);\n      setModalmessage(\"Deleted\");\n      setMessageModal(true);\n    } catch (err) {\n      console.log(\"Delete error\", err);\n      setModalmessage(\"Sorry,an error occured\");\n      setMessageModal(true);\n    }\n  };\n\n  return (\n    <>\n      {theModal()}\n      {messageModalComponent()}\n      <PageTitle>Refferals </PageTitle>\n\n      {/* <CTA /> */}\n\n      <div className=\"mt-2 mb-4\">\n        <Button onClick={getNewCode} size=\"large\">\n          Get New Refferal Code +\n        </Button>\n      </div>\n\n      <div className=\"mb-4\">\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\n          {/* ---------------------------Condition Drop Down-------------------------------------- */}\n          <label className=\"text-gray-100 mb-1 text-sm\">\n            Created By:\n            <div class=\"relative  \">\n              <select\n                class=\" shadow-md h-full rounded border block appearance-none placeholder-gray-100 w-full bg-cool-gray-900 border-gray-600 text-gray-100 py-2 px-4 pr-8 leading-tight \"\n                // value={condition}\n                onChange={(e) => {\n                  setCondition(e.target.value);\n                }}\n              >\n                {/* <option value=\"\" disabled selected>\n                  Created By\n                </option> */}\n                <option selected value=\"\">\n                  All\n                </option>\n                <option value={UserProfile.getId()}>Admin</option>\n              </select>\n\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-100\">\n                {/* <svg\n                  class=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg> */}\n              </div>\n            </div>\n          </label>\n\n          {/* -----------------Search Bar------------------------------------ */}\n          <label className=\"text-gray-100 mb-1 text-sm\">\n            Search:\n            <div class=\"block relative \">\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  class=\"h-4 w-4 fill-current text-gray-500\"\n                >\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                </svg>\n              </span>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  setRefresh(!refresh);\n                }}\n              >\n                <input\n                  // value={searchquery}\n                  // onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search\"\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-600 border-b block pl-8 pr-6 py-2 placeholder-gray-100 w-full bg-cool-gray-900 text-sm  text-gray-100  fne-none\"\n                />\n              </form>\n            </div>\n          </label>\n\n          <label className=\"text-gray-100 mb-1 text-sm\">\n            <span>From Date</span>\n            <input\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-600 border-b block pl-8 pr-6 py-2 placeholder-gray-100 w-full bg-cool-gray-900 text-sm  text-gray-100  fne-none\"\n              type=\"date\"\n              value={fromDate}\n              onChange={(e) => setFromDate(e.target.value)}\n            />\n          </label>\n          <label className=\"text-gray-100 mb-1 text-sm\">\n            <span>To Date</span>\n            <input\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-600 border-b block pl-8 pr-6 py-2 placeholder-gray-100 w-full bg-cool-gray-900 text-sm placeholder-gray-410 text-gray-100  fne-none\"\n              type=\"date\"\n              value={toDate}\n              onChange={(e) => setToDate(e.target.value)}\n            />\n          </label>\n\n          {/* <div class=\"block relative xl:ml-64\">\n            <Button\n              layout=\"outline\"\n              onClick={() => {\n                // setIsDwnldModalOpen(true);\n              }}\n            >\n              Download Database\n            </Button>\n          </div> */}\n        </div>\n      </div>\n\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              {/* <TableCell>Client</TableCell> */}\n              <TableCell>Code</TableCell>\n              <TableCell>Discount</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Delete</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                {/* <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={user.avatar}\n                      alt=\"User image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                        {user.job}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell> */}\n                <TableCell>\n                  <span className=\"text-sm text-white bg-gray-600 py-1 px-2 font-bold rounded-lg\">\n                    {user.refCode}\n                  </span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm \">{user.discount}%</span>\n                </TableCell>\n                <TableCell>\n                  <Badge type={user.status}>Active</Badge>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.createdAt).toLocaleDateString()}\n                  </span>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    layout=\"outline\"\n                    onClick={() => HandleDeleteRefferal(user._id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default Refferals;\n"],"sourceRoot":""}