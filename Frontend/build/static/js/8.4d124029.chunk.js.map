{"version":3,"sources":["components/Typography/PageTitle.js","images/user.png","pages/Influencers/Influencers.js"],"names":["PageTitle","children","className","Influencers","props","useState","page","setPage","data","setData","refresh","setRefresh","searchquery","setSearchQuery","fromDate","setFromDate","toDate","setToDate","totalResults","setTotalResults","useEffect","a","console","log","payload","pages","limit","filters","plan","role","axios","url","API","UserProfile","getId","method","response","out","total","class","onChange","e","value","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","target","placeholder","type","map","user","i","src","UserPng","alt","onClick","history","push","_id","name","job","email","Date","createdAt","toLocaleDateString","resultsPerPage","label","p"],"mappings":"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","file":"static/js/8.4d124029.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport UserProfile from \"../../helper/auth/UserProfile\";\r\nimport UserPng from \"../../images/user.png\";\r\n\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nfunction Influencers(props) {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [tempcode, setTempCode] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(true);\r\n  const [searchquery, setSearchQuery] = useState(\"\");\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const [totalResults, setTotalResults] = useState(20);\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n\r\n  useEffect(() => {\r\n    // Using an IIFE\r\n    (async function thegetter() {\r\n      console.log(\"getter called\");\r\n      let payload = {\r\n        pages: {\r\n          page: page,\r\n          limit: resultsPerPage,\r\n        },\r\n        filters: {\r\n          searchquery: searchquery,\r\n          plan: \"\",\r\n          role: \"4\",\r\n          fromDate: fromDate,\r\n          toDate: toDate,\r\n        },\r\n      };\r\n\r\n      try {\r\n        let response = await axios({\r\n          url: `${API}/user/${UserProfile.getId()}/getAllUsers`,\r\n          method: \"POST\",\r\n          data: payload,\r\n        });\r\n        console.log(response.data.out);\r\n        setTotalResults(response.data.total);\r\n\r\n        setData(response.data.out);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    })();\r\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [page, searchquery, refresh, fromDate, toDate]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Influencers</PageTitle>\r\n\r\n      {/* <CTA /> */}\r\n\r\n      {/* <div className=\"font-bold text-gray-700 text-xl\">Users</div> */}\r\n\r\n      <div className=\"mb-4\">\r\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\r\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full xl:space-x-2 \">\r\n          {/* ---------------------------Condition Drop Down-------------------------------------- */}\r\n          <div class=\"relative mx-1 \">\r\n            <select\r\n              class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-1 xl:py-2  xl: px-4  leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\r\n              // value={condition}\r\n              onChange={(e) => {\r\n                // setCondition(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Plan\r\n              </option>\r\n              <option value=\"\">All</option>\r\n              <option value=\"\">No Plan</option>\r\n              <option value=\"Good\">Gold</option>\r\n              <option value=\"Bad\">Silver</option>\r\n              <option value=\"Used\">Bronze</option>\r\n            </select>\r\n\r\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n              <svg\r\n                class=\"fill-current h-4 w-4\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n\r\n          {/* -----------------Search Bar------------------------------------ */}\r\n          <div class=\"block relative xl:ml-64 mt-2 xl:mt-0 ml-1\">\r\n            <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                class=\"h-4 w-4 fill-current text-gray-500\"\r\n              >\r\n                <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\r\n              </svg>\r\n            </span>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                setRefresh(!refresh);\r\n              }}\r\n            >\r\n              <input\r\n                value={searchquery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search\"\r\n                class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1 px-8  xl:pl-8 xl:pr-6 xl:py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              />\r\n            </form>\r\n          </div>\r\n\r\n          <label className=\"text-gray-700 -mt-3 mb-2 text-sm\">\r\n            <span>From Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={fromDate}\r\n              onChange={(e) => setFromDate(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"text-gray-700 -mt-3  mb-1 text-sm\">\r\n            <span>To Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={toDate}\r\n              onChange={(e) => setToDate(e.target.value)}\r\n            />\r\n          </label>\r\n\r\n          {/* <div class=\"block relative xl:ml-64\">\r\n            <Button\r\n              layout=\"outline\"\r\n              onClick={() => {\r\n                // setIsDwnldModalOpen(true);\r\n              }}\r\n            >\r\n              Download Database\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              {/* <TableCell>Client</TableCell> */}\r\n              <TableCell>User</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Created At</TableCell>\r\n              <TableCell>Plan</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {data.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar\r\n                      className=\"hidden mr-3 md:block cursor-pointer hover:bg-green-300\"\r\n                      src={UserPng}\r\n                      alt=\"User image\"\r\n                      onClick={() => {\r\n                        props.history.push(`/app/influencerpage/${user._id}`);\r\n                      }}\r\n                    />\r\n                    <div>\r\n                      <p\r\n                        className=\"font-semibold cursor-pointer hover:text-black\"\r\n                        onClick={() => {\r\n                          props.history.push(`/app/influencerpage/${user._id}`);\r\n                        }}\r\n                      >\r\n                        {user.name}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                        {user.job}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                  <span className=\"text-sm \">{user.email}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">\r\n                    {new Date(user.createdAt).toLocaleDateString()}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm  font-bold \">Gold</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Influencers;\r\n"],"sourceRoot":""}