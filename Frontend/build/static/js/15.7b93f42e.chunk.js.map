{"version":3,"sources":["components/Typography/PageTitle.js","pages/User/UserInfo.js"],"names":["PageTitle","children","className","UserInfo","useHistory","useParams","id","useState","PasswordModalOpen","setPasswordModalOpen","isReviewModalOpen","setIsReviewModalOpen","newpass","setNewpass","newpassconf","setNewpassconf","passerror","setPasserror","employeeID","username","email","customerName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","role","parentCustomerId","show_password","values","setValues","name","enc_password","confpassword","changePassword","a","data","UserProfile","getId","pass","Axios","url","API","method","user","console","log","getCustomerInfo","res","useEffect","isOpen","onClose","type","value","onChange","e","target","placeholder","valid","onClick","employeeName","getName","phone","city","country","zip"],"mappings":"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","file":"static/js/15.7b93f42e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../backend\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  HelperText,\r\n  Label,\r\n  Button,\r\n  Badge,\r\n  Select,\r\n} from \"@windmill/react-ui\";\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\r\nimport Axios from \"axios\";\r\nimport UserProfile from \"../../helper/auth/UserProfile\";\r\n\r\nexport default function UserInfo() {\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [PasswordModalOpen, setPasswordModalOpen] = useState(false);\r\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\r\n  const [newpass, setNewpass] = useState(\"\");\r\n  const [newpassconf, setNewpassconf] = useState(\"\");\r\n  const [passerror, setPasserror] = useState(\"\");\r\n\r\n  // console.log(id);\r\n  const [values, setValues] = useState({\r\n    //both\r\n    employeeID: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    // password: \"\",\r\n    // confpassword: \"\",\r\n    //customer\r\n    customerName: \"\",\r\n    // accountId: [],\r\n    //account\r\n    // accountName: \"\",\r\n    // unitId: [],\r\n    // //------> customerName from above\r\n    address: \"\",\r\n    district: \"\",\r\n    state: \"\",\r\n    locationType: \"\",\r\n    pincode: \"\",\r\n    GSTnumber: \"\",\r\n    contactPerson: \"\",\r\n    contactNo: \"\",\r\n    altContact: \"\",\r\n    WhatsappNo: \"\",\r\n    role: 0,\r\n    parentCustomerId: \"\",\r\n    show_password: \"\",\r\n  });\r\n  const [err, setErr] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    // accountName: \"\",\r\n    enc_password: \"\",\r\n    confpassword: \"\",\r\n  });\r\n\r\n  const changePassword = async () => {\r\n    let data = { id: UserProfile.getId(), pass: newpass };\r\n    try {\r\n      let user = await Axios({\r\n        url: `${API}/${UserProfile.getId()}/resetpassword`,\r\n        method: \"POST\",\r\n        data: data,\r\n      });\r\n      setIsReviewModalOpen(true);\r\n      setPasswordModalOpen(false);\r\n      console.log(\"Done\", user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getCustomerInfo = async () => {\r\n    // console.log(`getting customer info`, UserProfile.getId());\r\n    let data = { id: UserProfile.getId() };\r\n    // console.log(API);\r\n    try {\r\n      let res = await Axios({\r\n        url: `${API}/userinfo`,\r\n        method: \"POST\",\r\n        data: data,\r\n      });\r\n      // calc age\r\n\r\n      //   setValues({\r\n\r\n      //   });\r\n\r\n      console.log(\"Done\", res.data);\r\n      setValues(res.data[0]);\r\n      //   console.log(\"Hello\");\r\n    } catch (error) {\r\n      console.log(`error`, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerInfo();\r\n  }, []);\r\n\r\n  const ResetPassModal = () => {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={PasswordModalOpen}\r\n          onClose={() => setPasswordModalOpen(false)}\r\n        >\r\n          <ModalHeader>Change Password for {values.username}!</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n              <Label>\r\n                <span>New Password</span>\r\n                <Input\r\n                  className=\"mt-5\"\r\n                  type=\"password\"\r\n                  value={newpass}\r\n                  onChange={(e) => setNewpass(e.target.value)}\r\n                  placeholder=\"New Password\"\r\n                />\r\n              </Label>{\" \"}\r\n              <Label>\r\n                <span>Confirm Password</span>\r\n                <Input\r\n                  className=\"my-5\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={newpassconf}\r\n                  onChange={(e) => {\r\n                    setNewpassconf(e.target.value);\r\n                    if (e.target.value != newpass)\r\n                      setPasserror(\"Passwords do not match!\");\r\n                    else setPasserror(\"\");\r\n                  }}\r\n                />\r\n              </Label>\r\n              <HelperText valid={false}>{passerror}</HelperText>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              className=\"w-full sm:w-auto\"\r\n              onClick={() => {\r\n                if (newpass !== newpassconf) return;\r\n                changePassword();\r\n              }}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const PassChangeModal = () => {\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={isReviewModalOpen}\r\n          onClose={() => setIsReviewModalOpen(false)}\r\n        >\r\n          <ModalHeader>Password Updated Successfully!</ModalHeader>\r\n          <ModalBody></ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              className=\"w-full sm:w-auto\"\r\n              onClick={() => setIsReviewModalOpen(false)}\r\n            >\r\n              Okay!\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ResetPassModal()}\r\n      {PassChangeModal()}\r\n      <PageTitle>Profile Information {values.employeeName}</PageTitle>\r\n\r\n      {/* <SectionTitle> </SectionTitle> */}\r\n      <Card className=\"mb-8 shadow-md\">\r\n        <CardBody>\r\n          <div className=\"flex flex-row flex-wrap \">\r\n            <div className=\"w-1/2\">\r\n              <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\r\n                <span className=\"font-semibold\"> Personal Information</span>{\" \"}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Name:</span>{\" \"}\r\n                {UserProfile.getName()}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Email:</span> {values.email}\r\n              </p>\r\n\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Phone:</span> {values.phone}\r\n              </p>\r\n            </div>\r\n            <div className=\" w-1/2\">\r\n              <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\r\n                <span className=\"font-semibold\"> Contact Information</span>{\" \"}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Address:</span>{\" \"}\r\n                {values.address}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> City:</span> {values.city}\r\n              </p>\r\n\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> State:</span> {values.state}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Country:</span>{\" \"}\r\n                {values.country}\r\n              </p>\r\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-2\">\r\n                <span className=\"font-semibold\"> Zip:</span> {values.zip}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"my-10\">\r\n            {/* <Link to={`/app/employee/${id}/update`}>\r\n              <Button className=\"mr-3\">Update Info</Button>\r\n            </Link>\r\n            <Link to={`/app/employee/${id}/viewsalary`}>\r\n              <Button className=\"mr-3\">Payment History</Button>\r\n            </Link> */}\r\n            <Button className=\"\" onClick={() => setPasswordModalOpen(true)}>\r\n              Reset Password\r\n            </Button>\r\n\r\n            {/* <Button className=\"mx-3\">Delete Customer</Button> */}\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}