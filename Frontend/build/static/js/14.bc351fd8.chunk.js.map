{"version":3,"sources":["components/Typography/PageTitle.js","pages/Refferals/UserRefferals.js"],"names":["PageTitle","children","className","UserRefferals","useState","data","setData","tempcode","setTempCode","discount","setDiscount","refresh","setRefresh","codeExists","setCodeExists","messageModal","setMessageModal","modalMessage","setModalMessage","console","log","UserProfile","getRole","setTotalResults","isModalOpen","setIsModalOpen","closeModal","useEffect","a","payload","pages","page","limit","filters","creatorId","getId","axios","url","API","method","response","out","total","length","getNewCode","id","post","applyInfluencer","handleCreateRefferal","name","getName","creatorName","refCode","isOpen","onClose","layout","onClick","block","size","map","user","i","type","status","Date","createdAt","toLocaleDateString"],"mappings":"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","file":"static/js/14.bc351fd8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\n\r\nimport UserProfile from \"../../helper/auth/UserProfile\";\r\n\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Pagination,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"@windmill/react-ui\";\r\n\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\n\r\nfunction UserRefferals() {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [tempcode, setTempCode] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"10\");\r\n  const [refresh, setRefresh] = useState(true);\r\n  const [codeExists, setCodeExists] = useState(false);\r\n  const [messageModal, setMessageModal] = useState(false);\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  console.log(\"ROLE\", UserProfile.getRole());\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const [totalResults, setTotalResults] = useState(20);\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  const theModal = () => {\r\n    return (\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <ModalHeader>New Refferal Code</ModalHeader>\r\n        <ModalBody>\r\n          You can use the following refferal code to get a discount !!\r\n          <div className=\"flex items-center justify-center my-2\">\r\n            <div className=\"bg-gray-200 my-2 flex font-bold py-2 px-32 text-lg  items-center justify-center rounded-lg\">\r\n              {/* <div>Code:</div> */}\r\n              <div>{tempcode}</div>\r\n            </div>\r\n            {/* <div class=\" relative ml-2\">\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                <label>\r\n                  Discount(%)\r\n                  <input\r\n                    value={discount}\r\n                    onChange={(e) => setDiscount(e.target.value)}\r\n                    placeholder=\"Enter the discount %\"\r\n                    class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n                  />\r\n                </label>\r\n              </form>\r\n            </div> */}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\r\n           * that if present, would duplicate the buttons in a way similar to this.\r\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\r\n           * to Button\r\n           */}\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleCreateRefferal}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button onClick={handleCreateRefferal} block size=\"large\">\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n\r\n  useEffect(() => {\r\n    // Using an IIFE\r\n    // (async function thegetter() {\r\n    //   console.log(\"getter called\");\r\n    //   let payload = {\r\n    //     pages: {\r\n    //       page: page,\r\n    //       limit: resultsPerPage,\r\n    //     },\r\n    //     filters: {\r\n    //       creatorId: UserProfile.getId(),\r\n    //     },\r\n    //   };\r\n\r\n    //   try {\r\n    //     let response = await axios({\r\n    //       url: `${API}/refferal/${UserProfile.getId()}/getbyuser`,\r\n    //       method: \"POST\",\r\n    //       data: payload,\r\n    //     });\r\n    //     console.log(response.data.out);\r\n    //     setTotalResults(response.data.total);\r\n\r\n    //     setData(response.data.out);\r\n    //   } catch (error) {\r\n    //     throw error;\r\n    //   }\r\n    // })();\r\n    (async function thedocchecker() {\r\n      console.log(\"checker called\");\r\n      let payload = {\r\n        pages: {\r\n          page: 1,\r\n          limit: resultsPerPage,\r\n        },\r\n        filters: {\r\n          creatorId: UserProfile.getId(),\r\n        },\r\n      };\r\n\r\n      try {\r\n        let response = await axios({\r\n          url: `${API}/refferal/${UserProfile.getId()}/getbyuser`,\r\n          method: \"POST\",\r\n          data: payload,\r\n        });\r\n        console.log(response.data.out);\r\n        setTotalResults(response.data.total);\r\n        setData(response.data.out);\r\n        if (response.data.out.length != 0) {\r\n          setCodeExists(true);\r\n        }\r\n        // console.log(codeExists);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    })();\r\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [refresh]);\r\n\r\n  const getNewCode = async () => {\r\n    let id = UserProfile.getId();\r\n    // console.log(id);\r\n    const payload = { creatorId: id };\r\n    const response = await axios.post(\r\n      `${API}/refferal/${UserProfile.getId()}/getNewCode`,\r\n      payload\r\n    );\r\n    console.log(response.data);\r\n    setTempCode(response.data);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const applyInfluencer = async () => {\r\n    let id = UserProfile.getId();\r\n    // console.log(id);\r\n    try {\r\n      const response = await axios.post(\r\n        `${API}/user/${UserProfile.getId()}/requestInfluencer`\r\n      );\r\n      console.log(response.data);\r\n      setModalMessage(\"Request Send!\");\r\n      setMessageModal(true);\r\n    } catch (err) {\r\n      setModalMessage(\"Sorry, an error occured!\");\r\n      setMessageModal(true);\r\n    }\r\n  };\r\n\r\n  const handleCreateRefferal = async () => {\r\n    let id = UserProfile.getId();\r\n    let name = UserProfile.getName();\r\n    console.log(id);\r\n    const payload = {\r\n      creatorName: name,\r\n      creatorId: id,\r\n      refCode: tempcode,\r\n      discount: discount,\r\n    };\r\n    const response = await axios.post(\r\n      `${API}/refferal/${UserProfile.getId()}/createnew`,\r\n      payload\r\n    );\r\n\r\n    console.log(response.data);\r\n    setTempCode(\"\");\r\n    setDiscount(\"\");\r\n    setRefresh(!refresh);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const messageModalComponent = () => {\r\n    return (\r\n      <>\r\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\r\n          <ModalHeader>{modalMessage}</ModalHeader>\r\n          <ModalBody></ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              className=\"w-full sm:w-auto\"\r\n              onClick={() => setMessageModal(false)}\r\n            >\r\n              Okay!\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {theModal()}\r\n      {messageModalComponent()}\r\n      <PageTitle>Refferals</PageTitle>\r\n\r\n      {/* <CTA /> */}\r\n\r\n      {codeExists ? (\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHeader>\r\n              <tr>\r\n                {/* <TableCell>Client</TableCell> */}\r\n                <TableCell>Code</TableCell>\r\n                <TableCell>Discount</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Created At</TableCell>\r\n              </tr>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {data.map((user, i) => (\r\n                <TableRow key={i}>\r\n                  {/* <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar\r\n                      className=\"hidden mr-3 md:block\"\r\n                      src={user.avatar}\r\n                      alt=\"User image\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.name}</p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                        {user.job}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell> */}\r\n                  <TableCell>\r\n                    <span className=\"text-sm bg-gray-200 py-1 px-2 font-bold rounded-lg\">\r\n                      {user.refCode}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <span className=\"text-sm \">{user.discount}%</span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge type={user.status}>Active</Badge>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <span className=\"text-sm\">\r\n                      {new Date(user.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          {/* <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter> */}\r\n        </TableContainer>\r\n      ) : (\r\n        <div className=\"mt-2 mb-4\">\r\n          <Button onClick={getNewCode} size=\"large\">\r\n            Get New Refferal Code +\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <div className=\" w-1/2 mt-12 mb-4 text-gray-900\">\r\n        <p>\r\n          You can get your own referal codes only with an Influencer account.\r\n          Click the button to apply and reach out to us at cfemail@gmail.com\r\n          with your resume to get your Influencer account.\r\n        </p>\r\n        <Button onClick={applyInfluencer} size=\"small\" className=\"mt-5\">\r\n          Apply for Influencer\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserRefferals;\r\n"],"sourceRoot":""}