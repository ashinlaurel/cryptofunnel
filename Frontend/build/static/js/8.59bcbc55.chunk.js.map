{"version":3,"sources":["components/Typography/PageTitle.js","images/user.png","pages/Refferals/RefferalRequests.js"],"names":["PageTitle","children","className","RefferalRequests","useState","page","setPage","data","setData","setTempCode","refresh","setRefresh","searchquery","setSearchQuery","messageModal","setMessageModal","modalMessage","setModalMessage","selectedId","setSelectedId","selectedName","setSelectedName","isRefferalModalOpen","setIsRefferalModalOpen","code","setCode","discount","setDiscount","totalResults","setTotalResults","setIsModalOpen","AcceptInfluencer","id","a","payload","axios","post","API","UserProfile","getId","response","console","log","useEffect","pages","limit","filters","plan","InfulencerRequest","url","method","out","total","handleCreateRefferal","name","creatorName","creatorId","refCode","isOpen","onClose","onClick","class","value","onChange","e","target","placeholder","layout","block","size","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","map","user","i","src","UserPng","alt","job","email","Date","createdAt","toLocaleDateString","role","_id","resultsPerPage","label","p"],"mappings":"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","file":"static/js/8.59bcbc55.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React, { useState, useEffect } from \"react\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport UserProfile from \"../../helper/auth/UserProfile\";\nimport UserPng from \"../../images/user.png\";\n\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Badge,\n  Button,\n  Pagination,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"@windmill/react-ui\";\n\nimport axios from \"axios\";\nimport { API } from \"../../backend\";\n\nfunction RefferalRequests() {\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [tempcode, setTempCode] = useState(\"\");\n  const [refresh, setRefresh] = useState(true);\n  const [searchquery, setSearchQuery] = useState(\"\");\n  const [messageModal, setMessageModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"\");\n\n  //referal modal\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [selectedName, setSelectedName] = useState(\"\");\n  const [isRefferalModalOpen, setIsRefferalModalOpen] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [discount, setDiscount] = useState(0);\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n\n  const AcceptInfluencer = async (id) => {\n    try {\n      const payload = { id: id };\n      const response = await axios.post(\n        `${API}/user/${UserProfile.getId()}/acceptInfluencer`,\n        payload\n      );\n      console.log(response.data);\n\n      setModalMessage(\"Influencer Status Accepted\");\n      setMessageModal(true);\n      setRefresh(!refresh);\n    } catch (err) {\n      setModalMessage(\"Sorry, an error occured\");\n      setMessageModal(true);\n    }\n  };\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n\n  useEffect(() => {\n    // Using an IIFE\n    (async function thegetter() {\n      console.log(\"getter called\");\n      let payload = {\n        pages: {\n          page: page,\n          limit: resultsPerPage,\n        },\n        filters: {\n          searchquery: searchquery,\n          plan: \"\",\n          InfulencerRequest: true,\n        },\n      };\n\n      try {\n        let response = await axios({\n          url: `${API}/user/${UserProfile.getId()}/getAllUsers`,\n          method: \"POST\",\n          data: payload,\n        });\n        console.log(response.data.out);\n        setTotalResults(response.data.total);\n\n        setData(response.data.out);\n      } catch (error) {\n        throw error;\n      }\n    })();\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\n  }, [page, searchquery, refresh]);\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>{modalMessage}</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setMessageModal(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const handleCreateRefferal = async () => {\n    try {\n      let id = selectedId;\n      let name = selectedName;\n      console.log(id);\n      const payload = {\n        creatorName: name,\n        creatorId: id,\n        refCode: code,\n        discount: discount,\n      };\n      const response = await axios.post(\n        `${API}/refferal/${UserProfile.getId()}/createnew`,\n        payload\n      );\n      console.log(response.data);\n      setTempCode(\"\");\n      setDiscount(\"\");\n      setSelectedName(\"\");\n      setSelectedId(\"\");\n      setRefresh(!refresh);\n      setIsModalOpen(false);\n      setModalMessage(\"Referal Code Added\");\n      setMessageModal(true);\n    } catch (err) {\n      setModalMessage(\"Sorry,Error Occured\");\n      setMessageModal(true);\n    }\n  };\n\n  const setReferalModal = () => {\n    return (\n      <Modal\n        isOpen={isRefferalModalOpen}\n        onClose={() => setIsRefferalModalOpen(false)}\n      >\n        <ModalHeader>New Refferal Code</ModalHeader>\n        <ModalBody>\n          You can use the following refferal code to get a discount !!\n          <div className=\"flex items-center justify-left my-2\">\n            <div class=\" relative ml-2\">\n              <label>\n                Code\n                <input\n                  value={code}\n                  onChange={(e) => setCode(e.target.value)}\n                  placeholder=\"Enter the discount %\"\n                  class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </label>\n            </div>\n\n            <div class=\" relative ml-2\">\n              <label>\n                Discount(%)\n                <input\n                  value={discount}\n                  onChange={(e) => setDiscount(e.target.value)}\n                  placeholder=\"Enter the discount %\"\n                  class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                />\n              </label>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\n           * that if present, would duplicate the buttons in a way similar to this.\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\n           * to Button\n           */}\n          <div className=\"hidden sm:block\">\n            <Button\n              layout=\"outline\"\n              onClick={() => setIsRefferalModalOpen(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Button onClick={handleCreateRefferal}>Accept</Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button\n              block\n              size=\"large\"\n              layout=\"outline\"\n              onClick={() => setIsRefferalModalOpen(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button onClick={handleCreateRefferal} block size=\"large\">\n              Accept\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  return (\n    <>\n      <PageTitle>Influencer Requests</PageTitle>\n      {messageModalComponent()}\n      {setReferalModal()}\n\n      {/* <CTA /> */}\n\n      <div className=\"font-bold text-gray-700 text-xl\">Users</div>\n\n      <div className=\"mb-4\">\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full xl:space-x-2 \">\n          {/* ---------------------------Condition Drop Down-------------------------------------- */}\n          <div class=\"relative mx-1 \">\n            <select\n              class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-1 xl:py-2  xl: px-4  leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n              // value={condition}\n              onChange={(e) => {\n                // setCondition(e.target.value);\n              }}\n            >\n              <option value=\"\" disabled selected>\n                Plan\n              </option>\n              <option value=\"\">All</option>\n              <option value=\"\">No Plan</option>\n              <option value=\"Good\">Gold</option>\n              <option value=\"Bad\">Silver</option>\n              <option value=\"Used\">Bronze</option>\n            </select>\n\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n\n          {/* -----------------Search Bar------------------------------------ */}\n          <div class=\"block relative xl:ml-64 mt-2 xl:mt-0 ml-1\">\n            <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n              <svg\n                viewBox=\"0 0 24 24\"\n                class=\"h-4 w-4 fill-current text-gray-500\"\n              >\n                <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n              </svg>\n            </span>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                setRefresh(!refresh);\n              }}\n            >\n              <input\n                value={searchquery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search\"\n                class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1 px-8  xl:pl-8 xl:pr-6 xl:py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n              />\n            </form>\n          </div>\n\n          {/* <div class=\"block relative xl:ml-64\">\n            <Button\n              layout=\"outline\"\n              onClick={() => {\n                // setIsDwnldModalOpen(true);\n              }}\n            >\n              Download Database\n            </Button>\n          </div> */}\n        </div>\n      </div>\n\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              {/* <TableCell>Client</TableCell> */}\n              <TableCell>User</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Assign Referal</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {data.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar\n                      className=\"hidden mr-3 md:block\"\n                      src={UserPng}\n                      alt=\"User image\"\n                    />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                        {user.job}\n                      </p>\n                    </div>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <span className=\"text-sm \">{user.email}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">\n                    {new Date(user.createdAt).toLocaleDateString()}\n                  </span>\n                </TableCell>\n                <TableCell>\n                  {user.role == 4 ? (\n                    <span className=\"text-sm font-semibold text-primary-800 \">\n                      Accepted\n                    </span>\n                  ) : (\n                    <Button\n                      className=\"w-full sm:w-auto\"\n                      onClick={() => {\n                        AcceptInfluencer(user._id);\n                      }}\n                    >\n                      Accept\n                    </Button>\n                  )}\n                </TableCell>\n                <TableCell>\n                  <Button\n                    className=\"w-full sm:w-auto\"\n                    onClick={() => {\n                      setSelectedId(user._id);\n                      setSelectedName(user.name);\n                      setIsRefferalModalOpen(true);\n                    }}\n                  >\n                    Assign Code\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default RefferalRequests;\n"],"sourceRoot":""}