{"version":3,"sources":["components/Typography/PageTitle.js","pages/Refferals/Refferals.js"],"names":["PageTitle","children","className","Refferals","useState","page","setPage","data","setData","tempcode","setTempCode","discount","setDiscount","refresh","setRefresh","fromDate","setFromDate","toDate","setToDate","condition","setCondition","totalResults","setTotalResults","isModalOpen","setIsModalOpen","closeModal","useEffect","a","console","log","payload","pages","limit","filters","creatorId","axios","url","API","UserProfile","getId","method","response","out","total","getNewCode","id","post","handleCreateRefferal","name","getName","creatorName","refCode","isOpen","onClose","class","onSubmit","e","preventDefault","value","onChange","target","placeholder","layout","onClick","block","size","selected","xmlns","viewBox","d","type","map","user","i","status","Date","createdAt","toLocaleDateString","resultsPerPage","label","p"],"mappings":"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","file":"static/js/13.37e65eb2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PageTitle from \"../../components/Typography/PageTitle\";\r\n\r\nimport UserProfile from \"../../helper/auth/UserProfile\";\r\n\r\nimport {\r\n  TableBody,\r\n  TableContainer,\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  Avatar,\r\n  Badge,\r\n  Pagination,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from \"@windmill/react-ui\";\r\n\r\nimport axios from \"axios\";\r\nimport { API } from \"../../backend\";\r\n\r\nfunction Refferals() {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [tempcode, setTempCode] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"0\");\r\n  const [refresh, setRefresh] = useState(true);\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [condition, setCondition] = useState(\"\");\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10;\r\n  const [totalResults, setTotalResults] = useState(20);\r\n\r\n  // pagination change control\r\n  function onPageChange(p) {\r\n    setPage(p);\r\n  }\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsModalOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  const theModal = () => {\r\n    return (\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <ModalHeader>New Refferal Code</ModalHeader>\r\n        <ModalBody>\r\n          You can use the following refferal code to get a discount !!\r\n          <div className=\"flex items-center justify-left my-2\">\r\n            <label>\r\n              Code:\r\n              <div className=\"bg-gray-200 my-2 flex font-bold py-2 px-32 text-lg  items-center justify-center rounded-lg\">\r\n                {/* <div>Code:</div> */}\r\n                <div>{tempcode}</div>\r\n              </div>\r\n            </label>\r\n\r\n            <div class=\" relative ml-2\">\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                <label>\r\n                  Discount(%)\r\n                  <input\r\n                    value={discount}\r\n                    onChange={(e) => setDiscount(e.target.value)}\r\n                    placeholder=\"Enter the discount %\"\r\n                    class=\"shadow-md z-20 my-2 appearance-none rounded border border-gray-400 border-b block pl-2 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n                  />\r\n                </label>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\r\n           * that if present, would duplicate the buttons in a way similar to this.\r\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\r\n           * to Button\r\n           */}\r\n          <div className=\"hidden sm:block\">\r\n            <Button layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"hidden sm:block\">\r\n            <Button onClick={handleCreateRefferal}>Accept</Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className=\"block w-full sm:hidden\">\r\n            <Button onClick={handleCreateRefferal} block size=\"large\">\r\n              Accept\r\n            </Button>\r\n          </div>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n\r\n  useEffect(() => {\r\n    // Using an IIFE\r\n    (async function thegetter() {\r\n      console.log(\"getter called\");\r\n      let payload = {\r\n        pages: {\r\n          page: page,\r\n          limit: resultsPerPage,\r\n        },\r\n        filters: {\r\n          creatorId: condition,\r\n          fromDate: fromDate,\r\n          toDate: toDate,\r\n        },\r\n      };\r\n\r\n      try {\r\n        let response = await axios({\r\n          url: `${API}/refferal/${UserProfile.getId()}/getbyuser`,\r\n          method: \"POST\",\r\n          data: payload,\r\n        });\r\n        console.log(response.data.out);\r\n        setTotalResults(response.data.total);\r\n\r\n        setData(response.data.out);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    })();\r\n    // setData(response.slice((page - 1) * resultsPerPage, page * resultsPerPage));\r\n  }, [page, refresh, fromDate, toDate, condition]);\r\n\r\n  const getNewCode = async () => {\r\n    let id = UserProfile.getId();\r\n    // console.log(id);\r\n    const payload = { creatorId: id };\r\n    const response = await axios.post(\r\n      `${API}/refferal/${UserProfile.getId()}/getNewCode`,\r\n      payload\r\n    );\r\n    console.log(response.data);\r\n    setTempCode(response.data);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCreateRefferal = async () => {\r\n    let id = UserProfile.getId();\r\n    let name = UserProfile.getName();\r\n    console.log(id);\r\n    const payload = {\r\n      creatorName: name,\r\n      creatorId: id,\r\n      refCode: tempcode,\r\n      discount: discount,\r\n    };\r\n    const response = await axios.post(\r\n      `${API}/refferal/${UserProfile.getId()}/createnew`,\r\n      payload\r\n    );\r\n    console.log(response.data);\r\n    setTempCode(\"\");\r\n    setDiscount(\"\");\r\n    setRefresh(!refresh);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {theModal()}\r\n      <PageTitle>Refferals </PageTitle>\r\n\r\n      {/* <CTA /> */}\r\n\r\n      <div className=\"mt-2 mb-4\">\r\n        <Button onClick={getNewCode} size=\"large\">\r\n          Get New Refferal Code +\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\r\n        <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full space-x-2 \">\r\n          {/* ---------------------------Condition Drop Down-------------------------------------- */}\r\n          <label className=\"text-gray-700 mb-1 text-sm\">\r\n            Created By:\r\n            <div class=\"relative  \">\r\n              <select\r\n                class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\r\n                // value={condition}\r\n                onChange={(e) => {\r\n                  setCondition(e.target.value);\r\n                }}\r\n              >\r\n                {/* <option value=\"\" disabled selected>\r\n                  Created By\r\n                </option> */}\r\n                <option selected value=\"\">\r\n                  All\r\n                </option>\r\n                <option value={UserProfile.getId()}>Admin</option>\r\n              </select>\r\n\r\n              <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                <svg\r\n                  class=\"fill-current h-4 w-4\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 20 20\"\r\n                >\r\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </label>\r\n\r\n          {/* -----------------Search Bar------------------------------------ */}\r\n          <label className=\"text-gray-700 mb-1 text-sm\">\r\n            Search:\r\n            <div class=\"block relative \">\r\n              <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\r\n                <svg\r\n                  viewBox=\"0 0 24 24\"\r\n                  class=\"h-4 w-4 fill-current text-gray-500\"\r\n                >\r\n                  <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\r\n                </svg>\r\n              </span>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  setRefresh(!refresh);\r\n                }}\r\n              >\r\n                <input\r\n                  // value={searchquery}\r\n                  // onChange={(e) => setSearchQuery(e.target.value)}\r\n                  placeholder=\"Search\"\r\n                  class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </label>\r\n\r\n          <label className=\"text-gray-700 mb-1 text-sm\">\r\n            <span>From Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={fromDate}\r\n              onChange={(e) => setFromDate(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"text-gray-700 mb-1 text-sm\">\r\n            <span>To Date</span>\r\n            <input\r\n              class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block pl-8 pr-6 py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\r\n              type=\"date\"\r\n              value={toDate}\r\n              onChange={(e) => setToDate(e.target.value)}\r\n            />\r\n          </label>\r\n\r\n          {/* <div class=\"block relative xl:ml-64\">\r\n            <Button\r\n              layout=\"outline\"\r\n              onClick={() => {\r\n                // setIsDwnldModalOpen(true);\r\n              }}\r\n            >\r\n              Download Database\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              {/* <TableCell>Client</TableCell> */}\r\n              <TableCell>Code</TableCell>\r\n              <TableCell>Discount</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Created At</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {data.map((user, i) => (\r\n              <TableRow key={i}>\r\n                {/* <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar\r\n                      className=\"hidden mr-3 md:block\"\r\n                      src={user.avatar}\r\n                      alt=\"User image\"\r\n                    />\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.name}</p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                        {user.job}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell> */}\r\n                <TableCell>\r\n                  <span className=\"text-sm bg-gray-200 py-1 px-2 font-bold rounded-lg\">\r\n                    {user.refCode}\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm \">{user.discount}%</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge type={user.status}>Active</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">\r\n                    {new Date(user.createdAt).toLocaleDateString()}\r\n                  </span>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            label=\"Table navigation\"\r\n            onChange={onPageChange}\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Refferals;\r\n"],"sourceRoot":""}