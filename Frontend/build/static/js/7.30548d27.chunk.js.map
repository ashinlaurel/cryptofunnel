{"version":3,"sources":["components/Typography/PageTitle.js","images/user.png","pages/Influencers/InfluencerPage.js"],"names":["PageTitle","children","className","InfluencerPage","useHistory","id","useParams","useState","PasswordModalOpen","setPasswordModalOpen","isReviewModalOpen","setIsReviewModalOpen","newpass","setNewpass","newpassconf","setNewpassconf","passerror","setPasserror","codeDetails","setCodeDetails","refresh","setRefresh","searchquery","setSearchQuery","setPage","data","totalResults","messageModal","setMessageModal","employeeID","username","email","customerName","address","district","state","locationType","pincode","GSTnumber","contactPerson","contactNo","altContact","WhatsappNo","role","parentCustomerId","show_password","values","setValues","name","enc_password","confpassword","changePassword","a","pass","Axios","url","API","method","user","console","log","getCustomerInfo","res","codeGetter","payload","pages","page","limit","filters","creatorId","fromDate","toDate","UserProfile","getId","response","out","useEffect","isOpen","onClose","type","value","onChange","e","target","placeholder","valid","onClick","post","src","UserPng","userId","phone","city","country","zip","payable","moment","lastpaid","format","getRole","layout","refCode","discount","class","disabled","selected","xmlns","viewBox","d","onSubmit","preventDefault","map","i","alt","customerId","Date","createdAt","toLocaleDateString","paymentStatus","parseInt","amountTotal","planName","resultsPerPage","label","p"],"mappings":"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","file":"static/js/7.30548d27.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","export default __webpack_public_path__ + \"static/media/user.55758720.png\";","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { API } from \"../../backend\";\nimport UserPng from \"../../images/user.png\";\nimport moment from \"moment\";\n\nimport {\n  Card,\n  CardBody,\n  Input,\n  HelperText,\n  Label,\n  Button,\n  Badge,\n  Select,\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Avatar,\n  Pagination,\n} from \"@windmill/react-ui\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"@windmill/react-ui\";\nimport Axios from \"axios\";\nimport UserProfile from \"../../helper/auth/UserProfile\";\n\nexport default function InfluencerPage() {\n  let history = useHistory();\n  const { id } = useParams();\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [PasswordModalOpen, setPasswordModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [newpass, setNewpass] = useState(\"\");\n  const [newpassconf, setNewpassconf] = useState(\"\");\n  const [passerror, setPasserror] = useState(\"\");\n\n  //   refferal code states\n  const [codeDetails, setCodeDetails] = useState([]);\n\n  //   paymenthistory states\n  const [refresh, setRefresh] = useState(true);\n  const [searchquery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  // pagination setup\n  const resultsPerPage = 10;\n  const [totalResults, setTotalResults] = useState(20);\n  //modal\n  const [messageModal, setMessageModal] = useState(false);\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p);\n  }\n\n  // console.log(id);\n  const [values, setValues] = useState({\n    //both\n    employeeID: \"\",\n    username: \"\",\n    email: \"\",\n    // password: \"\",\n    // confpassword: \"\",\n    //customer\n    customerName: \"\",\n    // accountId: [],\n    //account\n    // accountName: \"\",\n    // unitId: [],\n    // //------> customerName from above\n    address: \"\",\n    district: \"\",\n    state: \"\",\n    locationType: \"\",\n    pincode: \"\",\n    GSTnumber: \"\",\n    contactPerson: \"\",\n    contactNo: \"\",\n    altContact: \"\",\n    WhatsappNo: \"\",\n    role: 0,\n    parentCustomerId: \"\",\n    show_password: \"\",\n  });\n  const [err, setErr] = useState({\n    email: \"\",\n    name: \"\",\n    // accountName: \"\",\n    enc_password: \"\",\n    confpassword: \"\",\n  });\n\n  const changePassword = async () => {\n    let data = { id: id, pass: newpass };\n    try {\n      let user = await Axios({\n        url: `${API}/${id}/resetpassword`,\n        method: \"POST\",\n        data: data,\n      });\n      setIsReviewModalOpen(true);\n      setPasswordModalOpen(false);\n      console.log(\"Done\", user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const getCustomerInfo = async () => {\n    // console.log(`getting customer info`, id);\n    let data = { id: id };\n    // console.log(API);\n    try {\n      let res = await Axios({\n        url: `${API}/userinfo`,\n        method: \"POST\",\n        data: data,\n      });\n      // calc age\n\n      //   setValues({\n\n      //   });\n\n      console.log(\"Done\", res.data);\n      setValues(res.data[0]);\n      //   console.log(\"Hello\");\n    } catch (error) {\n      console.log(`error`, error);\n    }\n  };\n  const codeGetter = async () => {\n    console.log(\"checker called\");\n    let payload = {\n      pages: {\n        page: 1,\n        limit: resultsPerPage,\n      },\n      filters: {\n        creatorId: id,\n        fromDate: \"\",\n        toDate: \"\",\n      },\n    };\n\n    try {\n      let response = await Axios({\n        url: `${API}/refferal/${UserProfile.getId()}/getbyuser`,\n        method: \"POST\",\n        data: payload,\n      });\n      // console.log(response);\n      console.log(\"the code getting\", response.data.out[0]);\n      setCodeDetails(response.data.out[0]);\n\n      //   setTotalResults(response.data.total);\n      //   setData(response.data.out);\n      //   if (response.data.out.length != 0) {\n      //     setCodeExists(true);\n      //   }\n      // console.log(codeExists);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  useEffect(async () => {\n    await getCustomerInfo();\n    await codeGetter();\n  }, [refresh]);\n\n  const messageModalComponent = () => {\n    return (\n      <>\n        <Modal isOpen={messageModal} onClose={() => setMessageModal(false)}>\n          <ModalHeader>\n            Click \"Paid\" to reset amount and mark as paid.\n          </ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={async () => {\n                try {\n                  let session = await Axios.post(\n                    `${API}/user/${UserProfile.getId()}/markInfluencerPaid`,\n                    { id: id }\n                  );\n                  setMessageModal(false);\n                  setRefresh(!refresh);\n                  console.log(\"success\");\n                } catch (error) {\n                  console.log(error);\n                }\n              }}\n            >\n              Paid!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const ResetPassModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={PasswordModalOpen}\n          onClose={() => setPasswordModalOpen(false)}\n        >\n          <ModalHeader>Change Password for {values.username}!</ModalHeader>\n          <ModalBody>\n            <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\n              <Label>\n                <span>New Password</span>\n                <Input\n                  className=\"mt-5\"\n                  type=\"password\"\n                  value={newpass}\n                  onChange={(e) => setNewpass(e.target.value)}\n                  placeholder=\"New Password\"\n                />\n              </Label>{\" \"}\n              <Label>\n                <span>Confirm Password</span>\n                <Input\n                  className=\"my-5\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={newpassconf}\n                  onChange={(e) => {\n                    setNewpassconf(e.target.value);\n                    if (e.target.value != newpass)\n                      setPasserror(\"Passwords do not match!\");\n                    else setPasserror(\"\");\n                  }}\n                />\n              </Label>\n              <HelperText valid={false}>{passerror}</HelperText>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => {\n                if (newpass !== newpassconf) return;\n                changePassword();\n              }}\n            >\n              Change Password\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  const PassChangeModal = () => {\n    return (\n      <>\n        <Modal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n        >\n          <ModalHeader>Password Updated Successfully!</ModalHeader>\n          <ModalBody></ModalBody>\n          <ModalFooter>\n            <Button\n              className=\"w-full sm:w-auto\"\n              onClick={() => setIsReviewModalOpen(false)}\n            >\n              Okay!\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {ResetPassModal()}\n      {PassChangeModal()}\n      {messageModalComponent()}\n      <PageTitle>Profile Information {values.name}</PageTitle>\n\n      {/* <SectionTitle> </SectionTitle> */}\n      <Card className=\"mb-2 mt-24 shadow-md overflow-visible\">\n        <CardBody>\n          <div className=\"w-full -mt-20 z-30 flex items-center justify-center \">\n            <div className=\"flex flex-col items-center justify-center\">\n              <img className=\"h-32 w-32 bg-white\" src={UserPng}></img>\n              <div className=\"mt-2 text-2xl font-sans font-semibold\">\n                {values.userId ? values.userId.name : \"\"}\n              </div>\n              <div className=\" text-lg \">Influencer</div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      <div className=\"flex flex-row flex-wrap xl:flex-nowrap xl:space-x-3  justify-left\">\n        <Card className=\"mb-4 w-full xl:w-1/3   shadow-md overflow-visible\">\n          <CardBody>\n            <div className=\"\">\n              <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\n                <span className=\"font-semibold\"> Personal Information</span>{\" \"}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Name:</span>{\" \"}\n                {values.userId ? values.userId.name : \"\"}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Email:</span> {values.email}\n              </p>\n\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Phone:</span> {values.phone}\n              </p>\n            </div>\n          </CardBody>\n        </Card>\n        <Card className=\"mb-4 w-full xl:w-1/3  shadow-md overflow-visible\">\n          <CardBody>\n            <div className=\" \">\n              <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\n                <span className=\"font-semibold\"> Contact Information</span>{\" \"}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Address:</span>{\" \"}\n                {values.address}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> City:</span> {values.city}\n              </p>\n\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> State:</span> {values.state}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Country:</span>{\" \"}\n                {values.country}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Zip:</span> {values.zip}\n              </p>\n            </div>\n          </CardBody>\n        </Card>\n        <Card className=\"mb-4 w-full xl:w-1/3   shadow-md overflow-visible\">\n          <CardBody>\n            <div className=\"\">\n              <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\n                <span className=\"font-semibold\"> Amount Payable</span>{\" \"}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Amount:</span>\n                {\" $ \"}\n                {values.userId ? values.userId.payable : \"\"}\n              </p>\n              <p className=\"text-md text-gray-700 dark:text-gray-100 py-1\">\n                <span className=\"font-semibold\"> Last Paid:</span>{\" \"}\n                {values.userId\n                  ? moment(values.userId.lastpaid).format(\"DD-MM-YYYY\")\n                  : \"\"}\n              </p>\n              {UserProfile.getRole() == 1 ? (\n                <div className=\"flex  items-center justify-center mt-10  \">\n                  <Button\n                    layout=\"outline\"\n                    className=\"w-3/4\"\n                    onClick={() => setMessageModal(true)}\n                  >\n                    Mark as Paid\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n\n      <Card className=\"mb-8  shadow-md overflow-visible\">\n        <CardBody>\n          <div className=\"\">\n            <p className=\"text-lg  text-gray-800 dark:text-gray-100\">\n              <span className=\"font-semibold\"> Assigned Refferal Code</span>{\" \"}\n            </p>\n            <p className=\"text-md text-gray-700 dark:text-gray-100 pt-2\">\n              <span className=\"font-semibold\"> Code:</span>{\" \"}\n              {codeDetails ? codeDetails.refCode : null}\n            </p>\n            <p className=\"text-md text-gray-700 dark:text-gray-100 \">\n              <span className=\"font-semibold\"> Discount:</span>{\" \"}\n              {codeDetails ? codeDetails.discount : null}%\n            </p>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* ------------------Payment History ----------------------------- */}\n      <Card className=\"mb-8  shadow-md overflow-visible\">\n        <CardBody>\n          <div className=\"text-lg  text-gray-800 dark:text-gray-100 mb-6\">\n            <span className=\"font-semibold\">Refferal Usage History</span>{\" \"}\n          </div>\n          <div className=\"mb-4\">\n            {/* -------------------------------------Row 1 ------------------------------------------------------------------------------- */}\n            <div class=\"my-2 flex sm:flex-row flex-col items-start sm:items-center sm:justify-left h-full xl:space-x-2 \">\n              {/* ---------------------------Condition Drop Down-------------------------------------- */}\n              <div class=\"relative mx-1 \">\n                <select\n                  class=\" shadow-md h-full rounded border block appearance-none w-full bg-white border-gray-400 text-gray-700 py-1 xl:py-2  xl: px-4  leading-tight focus:outline-none   focus:bg-white focus:border-gray-500\"\n                  // value={condition}\n                  onChange={(e) => {\n                    // setCondition(e.target.value);\n                  }}\n                >\n                  <option value=\"\" disabled selected>\n                    Plan\n                  </option>\n                  <option value=\"\">All</option>\n                  <option value=\"\">No Plan</option>\n                  <option value=\"Good\">Gold</option>\n                  <option value=\"Bad\">Silver</option>\n                  <option value=\"Used\">Bronze</option>\n                </select>\n\n                <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                  <svg\n                    class=\"fill-current h-4 w-4\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                  >\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                  </svg>\n                </div>\n              </div>\n\n              {/* -----------------Search Bar------------------------------------ */}\n              <div class=\"block relative xl:ml-64 mt-2 xl:mt-0 ml-1\">\n                <span class=\"h-full absolute inset-y-0 left-0 flex items-center pl-2\">\n                  <svg\n                    viewBox=\"0 0 24 24\"\n                    class=\"h-4 w-4 fill-current text-gray-500\"\n                  >\n                    <path d=\"M10 4a6 6 0 100 12 6 6 0 000-12zm-8 6a8 8 0 1114.32 4.906l5.387 5.387a1 1 0 01-1.414 1.414l-5.387-5.387A8 8 0 012 10z\"></path>\n                  </svg>\n                </span>\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    setRefresh(!refresh);\n                  }}\n                >\n                  <input\n                    value={searchquery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    placeholder=\"Search\"\n                    class=\"shadow-md z-20 appearance-none rounded border border-gray-400 border-b block py-1 px-8  xl:pl-8 xl:pr-6 xl:py-2 w-full bg-white text-sm placeholder-gray-400 text-gray-700 focus:bg-white focus:placeholder-gray-600 focus:text-gray-700 focus:outline-none\"\n                  />\n                </form>\n              </div>\n\n              {/* <div class=\"block relative xl:ml-64\">\n            <Button\n              layout=\"outline\"\n              onClick={() => {\n                // setIsDwnldModalOpen(true);\n              }}\n            >\n              Download Database\n            </Button>\n          </div> */}\n            </div>\n          </div>\n\n          <TableContainer>\n            <Table>\n              <TableHeader>\n                <tr>\n                  <TableCell>User</TableCell>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Plan</TableCell>\n                </tr>\n              </TableHeader>\n              <TableBody>\n                {data.map((user, i) => (\n                  <TableRow key={i}>\n                    <TableCell>\n                      <div className=\"flex items-center text-sm\">\n                        <Avatar\n                          className=\"hidden mr-3 md:block\"\n                          src={UserPng}\n                          alt=\"User image\"\n                        />\n                        <div>\n                          <p className=\"font-semibold\">\n                            {user.customerId.name}\n                          </p>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {user.customerId.email}\n                          </p>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <p className=\"font-semibold text-sm\">\n                        {new Date(user.createdAt).toLocaleDateString()}\n                      </p>\n                    </TableCell>\n\n                    <TableCell>\n                      <Badge className=\"text-sm \">{user.paymentStatus}</Badge>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm font-bold\">\n                        {parseInt(user.amountTotal) / 100}\n                      </span>\n                    </TableCell>\n                    <TableCell>\n                      <span className=\"text-sm   \">{user.planName}</span>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            <TableFooter>\n              <Pagination\n                totalResults={totalResults}\n                resultsPerPage={resultsPerPage}\n                label=\"Table navigation\"\n                onChange={onPageChange}\n              />\n            </TableFooter>\n          </TableContainer>\n        </CardBody>\n      </Card>\n      {/* <Card className=\"mb-8  shadow-md overflow-visible\">\n        <CardBody>\n          <div className=\"flex flex-wrap flex-col md:flex-row space-y-2   \">\n            <Link className=\"w-full\" to={`/app/employee/${id}/update`}>\n              <Button className=\" w-full \">Update Info</Button>\n            </Link>\n            <Link className=\"w-full\" to={`/app/employee/${id}/viewsalary`}>\n              <Button className=\" w-full\">Payment History</Button>\n            </Link>\n            <Button\n              className=\"w-full\"\n              onClick={() => setPasswordModalOpen(true)}\n            >\n              Reset Password\n            </Button>\n\n            <Button className=\"mx-3\">Delete Customer</Button>\n          </div>\n        </CardBody>\n      </Card> */}\n    </div>\n  );\n}\n"],"sourceRoot":""}